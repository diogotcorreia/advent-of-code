use aoc_common::{AocDay, DayError};

pub struct AocDay00 {
    // TODO
}

impl AocDay<u32, u32> for AocDay00 {
    fn preprocessing(lines: impl Iterator<Item = String>) -> Result<Self, DayError> {
        // TODO

        Ok(AocDay00 { /* TODO */ })
    }
    fn part1(&self) -> u32 {
        todo!()
    }
    fn part2(&self) -> u32 {
        todo!()
    }
}

#[cfg(test)]
mod day00tests {
    use super::*;

    const INPUT: &[&str] = &[""];

    #[test]
    fn part1() -> Result<(), DayError> {
        let day = AocDay00::preprocessing_tests(INPUT)?;
        assert_eq!(day.part1(), todo!());
        Ok(())
    }

    #[test]
    fn part2() -> Result<(), DayError> {
        let day = AocDay00::preprocessing_tests(INPUT)?;
        assert_eq!(day.part2(), todo!());
        Ok(())
    }
}
